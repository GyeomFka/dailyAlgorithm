같은 메소드를 사용하더라도

매개변수가 달라지더라면 다른메소드를 활용 할 수 있다.

A a = new A();

a.set(1,2);
a.set(1,2,3);

같은 메소드의 이름, 매개변수의 종류(타입,갯수)가 다르다면 다른 메소드로 인식한다.
* 인자를 보고 메소드를 판단한다.


public void test(int a, int b){
    this.a = a;
    this.b = b;
}

public void test(int a, int b, int c){
    this.a = a; → 중복부분
    this.b = b; → 중복부분
    중복부분 제거 후 코딩
    this.test(a,b); 이렇게 중복을 제거하는 프로그래밍을 하는것이 생산성과 유지보수 측면에서 더욱 용이하다.
    this.c = c;
}

Overloading의 규칙!
<인자>가 달라지는것은 오버로딩의 활용측면이지만
    그렇다면? <return값>이 달라지는것은 ?
    같은이름의 메소드가 있는데,



overriding VS overloading
오버라이딩과 오버로딩은 용어가 참으로 헷갈린다. 당연하다. 중요한 것은 오버라이딩이 무엇이고 오버로딩이 무엇인가를 구분하는 것은 아니다.
 riding(올라탄다)을 이용해서 부모 클래스의 메소드의 동작방법을 변경하고, loading을 이용해서 같은 이름, 다른 매개변수의 메소드들을 여러개 만들 수 있다는 사실을 아는 것이 중요하다.
 다만 학습이나 협업의 과정에서 개념을 주고 받을 때는 용어가 중요해진다. 필자의 생각에 이 개념들이 헷갈리는 이유는 over라는 공통분모 때문이다. over를 제외하고 알아두면 덜 헷갈리지 않을까 싶다.
  (참고로 overriding는 재정의라는 사전적인 의미가 있습니다.)

강의내용 : 생활코딩
출처 : 생활코딩