왜 ?
접근 제어자는 매우 중요한 개념이다. 하지만 그 중요함은 기본적으로는 이해의 영역이지만 근본적으로는 공감의 영역이다.
규모있는 에플리케이션을 만드는 과정에서 경험하게 되는 수 많은 막장들로 인한 깊은 절망감을 경험해보지 않았다면 접근 제어자와 같은 개념들은 관념적인 것으로 치부되기 쉽다.
에플리케이션이 커진다는 것은 다른 말로 망가질 확률이 커진다는 의미와 같다.
특히 로직이 망가지는 첫번째 용의자는 사용자다. 즉 객체를 사용하는 입장에서 객체 내부적으로 사용하는 변수나 메소드에 접근함으로서 개발자가 의도하지 못한 오동작을 일으키게 되는 것이다.

강의내용 : 생활코딩
출처 : 생활코딩
https://opentutorials.org/course/1223/6061



 - 부연개념 : 유지보수 측면에서도 바라봐도 좋을것같다.
 public  라면 고치고자 할때 프로젝트 전반적으로 봐야한다.
 protected 라면 유지보수 측면이 줄어든다 (class < package)
 private ? -> 클래스 내부에서만 고치면 된다.